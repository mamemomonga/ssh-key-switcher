#!/usr/bin/env perl
use strict;
use warnings;
use utf8;
use feature 'say';

binmode(STDOUT,':utf8');
binmode(STDERR,':utf8');
binmode(STDIN, ':utf8');

my $action=$ARGV[0] || '';
my $cmd_ssh_add='ssh-add';

# ここに各秘密鍵へのパスを書く
my %keys = (
	# USERNAME FILENAME
	'user1' => $ENV{HOME}.'/.ssh/user1.id_rsa',
	'user2' => $ENV{HOME}.'/.ssh/user2.id_rsa',
);

sub active_list {
	my @lists=map { [ split(/\s/,$_) ] } split(/\n/,`$cmd_ssh_add -l`);

	# 0: length
	# 1: fingerprint
	# 2: filename
	# 3: type
	
	my @matched;
	foreach my $name (keys %keys) {
		foreach my $ls(@lists) {
			push @matched,$name if($ls->[2] eq $keys{$name});
		}
	}
	return @matched;
}

my @matched=active_list();
if($keys{$action}) {
	my $found=0;
	foreach(@matched) {
		if($action eq $_) {
			$found=1;
		} else {
			do_system($cmd_ssh_add,'-d',$keys{$_});
		}
	}
	unless($found) {
		do_system($cmd_ssh_add,$keys{$action});
	}
}
@matched=active_list();
foreach(@matched) { say "active: $_" }

sub do_system {
    my @args=@_;
	say join(" ",@args);
    system(@args);
    if ($? == -1) {
        die "---- failed to execute: $!\n";
    } elsif ($? & 127) {
        die sprintf("---- child died with signal %d, %s coredump\n",($? & 127),($? & 128) ? 'with' : 'without');
    } else {
        my $ce=$? >> 8;
        if($ce != 0) {
            die sprintf("---- child exited with value %d\n", $ce) if $ce != 0;
        }
    }
}

1;
